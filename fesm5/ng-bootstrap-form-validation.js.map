{"version":3,"file":"ng-bootstrap-form-validation.js","sources":["ng://ng-bootstrap-form-validation/lib/Directives/form-validation.directive.ts","ng://ng-bootstrap-form-validation/lib/Enums/BootstrapVersion.ts","ng://ng-bootstrap-form-validation/lib/Tokens/tokens.ts","ng://ng-bootstrap-form-validation/lib/Components/messages/messages.component.ts","ng://ng-bootstrap-form-validation/lib/default-errors.ts","ng://ng-bootstrap-form-validation/lib/Services/error-message.service.ts","ng://ng-bootstrap-form-validation/lib/Components/form-group/form-group.component.ts","ng://ng-bootstrap-form-validation/lib/Directives/form-control.directive.ts","ng://ng-bootstrap-form-validation/lib/ng-bootstrap-form-validation.module.ts"],"sourcesContent":["import {\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  HostListener\n} from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup\n} from \"@angular/forms\";\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: \"[formGroup]\"\n})\nexport class FormValidationDirective {\n  @Input()\n  formGroup: FormGroup;\n  @Output()\n  validSubmit = new EventEmitter<any>();\n\n  @HostListener(\"submit\")\n  onSubmit() {\n    this.markAsTouchedAndDirty(this.formGroup);\n    if (this.formGroup.valid) {\n      this.validSubmit.emit(this.formGroup.value);\n    }\n  }\n\n  markAsTouchedAndDirty(control: AbstractControl) {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach(key =>\n        this.markAsTouchedAndDirty(control.controls[key])\n      );\n    } else if (control instanceof FormArray) {\n      control.controls.forEach(c => this.markAsTouchedAndDirty(c));\n    } else if (control instanceof FormControl && control.enabled) {\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    }\n  }\n}\n","export enum BootstrapVersion {\n  Three,\n  Four\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { BootstrapVersion } from \"../Enums/BootstrapVersion\";\nimport { ErrorMessage } from \"../Models/error-message\";\n\nexport const CUSTOM_ERROR_MESSAGES = new InjectionToken<ErrorMessage[]>(\n  \"ng-bootstrap-form-validation custom error messages\"\n);\n\nexport const BOOTSTRAP_VERSION = new InjectionToken<BootstrapVersion>(\n  \"ng-bootstrap-form-validation module options\"\n);\n","import { Component, Input, Inject } from \"@angular/core\";\nimport { BootstrapVersion } from \"../../../lib/Enums/BootstrapVersion\";\nimport { BOOTSTRAP_VERSION } from \"../../Tokens/tokens\";\n\n@Component({\n  selector: \"bfv-messages\",\n  template: `\n    <span [ngClass]=\"className\" *ngFor=\"let message of messages()\">{{message}}</span>\n  `,\n  styles: [\n    `\n      .invalid-feedback,\n      .valid-feedback {\n        display: block;\n      }\n    `\n  ]\n})\nexport class MessagesComponent {\n  @Input()\n  public messages = () => [];\n\n  get className() {\n    switch (this.bootstrapVersion) {\n      case BootstrapVersion.Three:\n        return \"help-block\";\n      case BootstrapVersion.Four:\n        return \"invalid-feedback\";\n    }\n  }\n\n  constructor(\n    @Inject(BOOTSTRAP_VERSION) private bootstrapVersion: BootstrapVersion\n  ) {}\n}\n","import { ErrorMessage } from \"./Models/error-message\";\n\nexport const DEFAULT_ERRORS: ErrorMessage[] = [\n  {\n    error: \"required\",\n    format: label => `${label} is required`\n  },\n  {\n    error: \"pattern\",\n    format: label => `${label} is invalid`\n  },\n  {\n    error: \"minlength\",\n    format: (label, error) =>\n      `${label} must be at least ${error.requiredLength} characters`\n  },\n  {\n    error: \"maxlength\",\n    format: (label, error) =>\n      `${label} must be no longer than ${error.requiredLength} characters`\n  },\n  {\n    error: \"requiredTrue\",\n    format: (label, error) => `${label} is required`\n  },\n  {\n    error: \"email\",\n    format: (label, error) => `Invalid email address`\n  },\n  {\n    error: \"max\",\n    format: (label, error) => `${label} must be no greater than ${error.max}`\n  },\n  {\n    error: \"min\",\n    format: (label, error) => `${label} must be no less than ${error.min}`\n  }\n];\n","import { Injectable, Inject } from \"@angular/core\";\nimport { DEFAULT_ERRORS } from \"../default-errors\";\nimport { CUSTOM_ERROR_MESSAGES } from \"../Tokens/tokens\";\nimport { ErrorMessage } from \"../Models/error-message\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ErrorMessageService {\n  private defaultErrors = DEFAULT_ERRORS;\n\n  public errorMessages: ErrorMessage[];\n\n  constructor(\n    @Inject(CUSTOM_ERROR_MESSAGES) public customErrorMessages: ErrorMessage[][]\n  ) {\n    this.errorMessages = customErrorMessages.reduce(\n      (acc, cur) => acc.concat(cur),\n      this.defaultErrors\n    );\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  OnInit,\n  AfterContentInit\n} from \"@angular/core\";\nimport { FormControlName } from \"@angular/forms\";\nimport { ErrorMessageService } from \"../../Services/error-message.service\";\nimport { MessagesComponent } from \"../messages/messages.component\";\nimport { ErrorMessage } from \"../../Models/error-message\";\n\n@Component({\n  // tslint:disable:component-selector\n  selector: \".form-group\",\n  template: `\n    <ng-content></ng-content>\n    <bfv-messages *ngIf=\"!messagesBlock\" [messages]=\"messages\"></bfv-messages>\n  `\n})\nexport class FormGroupComponent implements OnInit, AfterContentInit {\n  @ContentChildren(FormControlName)\n  FormControlNames: QueryList<FormControlName>;\n\n  @Input()\n  customErrorMessages: ErrorMessage[] = [];\n\n  @Input()\n  validationDisabled = false;\n\n  @HostBinding(\"class.has-error\")\n  get hasErrors() {\n    return (\n      this.FormControlNames.some(c => !c.valid && c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @HostBinding(\"class.has-success\")\n  get hasSuccess() {\n    return (\n      !this.FormControlNames.some(c => !c.valid) &&\n      this.FormControlNames.some(c => c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @ContentChild(MessagesComponent, { static: false })\n  public messagesBlock: MessagesComponent;\n\n  private errorMessages: ErrorMessage[];\n\n  public messages = () => this.getMessages();\n\n  constructor(\n    private elRef: ElementRef,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.messagesBlock) {\n      this.messagesBlock.messages = this.messages;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = this.errorMessageService.errorMessages\n      .concat(this.customErrorMessages)\n      .reverse();\n  }\n\n  get label() {\n    const label = this.elRef.nativeElement.querySelector(\"label\");\n    return label && label.textContent ? label.textContent.trim() : \"This field\";\n  }\n\n  get isDirtyAndTouched() {\n    return this.FormControlNames.some(c => c.dirty && c.touched);\n  }\n\n  private getMessages(): string[] {\n    const messages = [];\n    if (!this.isDirtyAndTouched || this.validationDisabled) {\n      return messages;\n    }\n\n    const names = this.FormControlNames.map(f => f.name);\n\n    this.FormControlNames.filter(\n      (c, i) =>\n        !c.valid &&\n        !!c.errors &&\n        // filter out FormControlNames that share the same name - usually for radio buttons\n        names.indexOf(c.name) === i\n    ).forEach(control => {\n      Object.keys(control.errors).forEach(key => {\n        const error = this.errorMessages.find(err => err.error === key);\n        if (!error) {\n          return;\n        }\n        messages.push(error.format(this.label, control.errors[key]));\n      });\n    });\n\n    return messages;\n  }\n}\n","import {\n  Directive,\n  Input,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  Inject\n} from \"@angular/core\";\nimport { ControlContainer, FormControl } from \"@angular/forms\";\nimport { BootstrapVersion } from \"../Enums/BootstrapVersion\";\nimport { BOOTSTRAP_VERSION } from \"../Tokens/tokens\";\n\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  // tslint:disable-next-line:no-non-null-assertion\n  return [...parent.path!, name];\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: \".form-control,.form-check-input,.custom-control-input\"\n})\nexport class FormControlDirective {\n  @Input()\n  formControlName: string;\n  @Input()\n  formControl: string;\n\n  @HostBinding(\"class.is-valid\")\n  get validClass() {\n    if (!this.control) {\n      return false;\n    }\n    return (\n      this.bootstrapFour &&\n      this.control.valid &&\n      (this.control.touched || this.control.dirty)\n    );\n  }\n\n  @HostBinding(\"class.is-invalid\")\n  get invalidClass() {\n    if (!this.control) {\n      return false;\n    }\n    return (\n      this.bootstrapFour &&\n      this.control.invalid &&\n      this.control.touched &&\n      this.control.dirty\n    );\n  }\n\n  get path() {\n    return controlPath(this.formControlName, this.parent);\n  }\n\n  get control(): FormControl {\n    return this.formDirective && this.formDirective.getControl(this);\n  }\n\n  get formDirective(): any {\n    return this.parent ? this.parent.formDirective : null;\n  }\n\n  get bootstrapFour() {\n    return this.bootstrapVersion === BootstrapVersion.Four;\n  }\n\n  constructor(\n    // this value might be null, but we union type it as such until\n    // this issue is resolved: https://github.com/angular/angular/issues/25544\n    @Optional()\n    @Host()\n    @SkipSelf()\n    private parent: ControlContainer,\n    @Inject(BOOTSTRAP_VERSION) private bootstrapVersion: BootstrapVersion\n  ) {}\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { FormValidationDirective } from \"./Directives/form-validation.directive\";\nimport { MessagesComponent } from \"./Components/messages/messages.component\";\nimport { ErrorMessageService } from \"./Services/error-message.service\";\nimport { CUSTOM_ERROR_MESSAGES, BOOTSTRAP_VERSION } from \"./Tokens/tokens\";\nimport { BootstrapVersion } from \"./Enums/BootstrapVersion\";\nimport { FormGroupComponent } from \"./Components/form-group/form-group.component\";\nimport { NgBootstrapFormValidationModuleOptions } from \"./Models/NgBootstrapFormValidationModuleOptions\";\nimport { FormControlDirective } from \"./Directives/form-control.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    FormValidationDirective,\n    FormGroupComponent,\n    MessagesComponent,\n    FormControlDirective\n  ],\n  exports: [\n    FormValidationDirective,\n    FormGroupComponent,\n    MessagesComponent,\n    FormControlDirective\n  ]\n})\nexport class NgBootstrapFormValidationModule {\n  static forRoot(\n    userOptions: NgBootstrapFormValidationModuleOptions = {\n      bootstrapVersion: BootstrapVersion.Four\n    }\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgBootstrapFormValidationModule,\n      providers: [\n        {\n          provide: CUSTOM_ERROR_MESSAGES,\n          useValue: userOptions.customErrorMessages || [],\n          multi: true\n        },\n        {\n          provide: BOOTSTRAP_VERSION,\n          useValue: userOptions.bootstrapVersion\n        },\n        ErrorMessageService\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}